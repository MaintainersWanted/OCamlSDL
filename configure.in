dnl ****** -*- m4 -*-
dnl OCamlSdl autoconf input
dnl ******
dnl
dnl $Id: configure.in,v 1.24 2002/09/10 11:54:06 oliv__a Exp $

dnl  begin configure.in 
AC_INIT(src/sdl.ml)
AC_PREFIX_DEFAULT(/usr/local)

AC_CONFIG_AUX_DIR(./support)
AC_CONFIG_HEADER(src/config.h)
# need support/install-sh
# need support/missing
# need support/mkinstalldirs

dnl -*- Check for programs -*-
if test -z "$CFLAGS" ; then
   CFLAGS="-g -O -Wall -Wno-unused"
fi
AC_PROG_CC
AC_C_INLINE
if test "$ac_cv_c_inline" != no ; then
  AC_DEFINE(HAVE_INLINE)
fi
AC_PROG_INSTALL

#  Check for OCaml programs 
AC_CHECK_PROG(OCAMLC,ocamlc,ocamlc)
if test -z "$OCAMLC" ; then
	AC_MSG_ERROR(Cannot find ocamlc.)
fi
AC_MSG_CHECKING(OCaml system directory)
OCAMLLIBDIR=`$OCAMLC -where`
AC_MSG_RESULT($OCAMLLIBDIR)
AC_SUBST(OCAMLLIBDIR)
AC_CHECK_PROG(OCAMLOPT,ocamlopt,ocamlopt)
if test -z "$OCAMLOPT" ; then
	AC_MSG_WARN(Cannot find ocamlopt.)
fi
AC_CHECK_PROG(OCAMLMKTOP,ocamlmktop,ocamlmktop)
if test -z "$OCAMLMKTOP" ; then
	AC_MSG_ERROR(Cannot find ocamlmktop.)
fi
AC_CHECK_PROG(OCAMLDEP,ocamldep,ocamldep)
if test -z "$OCAMLDEP" ; then
	AC_MSG_ERROR(Cannot find ocamldep.)
fi
AC_CHECK_PROG(OCAMLMKLIB,ocamlmklib,ocamlmklib)
if test -z "$OCAMLMKLIB" ; then
	AC_MSG_WARN(Cannot find ocamlmklib.)
fi
AC_CHECK_PROG(OCAMLDOC,ocamldoc,ocamldoc)
if test -z "$OCAMLDOC" ; then
	AC_MSG_WARN(Cannot find ocamldoc.)
fi


dnl -*- where to install the library ? -*-
AC_ARG_WITH(installdir,[  --with-installdir=DIR	  specify installation directory [defaults to +sdl]],OCAMLSDLDIR="$withval")
if test -z "$OCAMLSDLDIR" ; then
  OCAMLSDLDIR='$(CAMLLIBDIR)/sdl'
fi
AC_SUBST(OCAMLSDLDIR)

dnl -*- Check for libraries -*-
dnl  Figure out which math library to use 
case "$target" in
    *mingw32* | *beos* )
        ;;
    *)
        LIBS="$LIBS -lm"
        ;;
esac

dnl  Check for SDL libraries 
AC_CHECK_PROG(SDL_CONFIG,sdl-config,sdl-config)
if test -z "$SDL_CONFIG" ; then
        AC_MSG_ERROR(Cannot find sdl-config.)
else
        SDL_CFLAGS=`$SDL_CONFIG --cflags`
        SDL_LIBS=`$SDL_CONFIG --libs`
fi
LIBS="$LIBS $SDL_LIBS"
CPPFLAGS="$CPPFLAGS $SDL_CFLAGS"

dnl Checking SDL headers
AC_CHECK_HEADER(SDL.h,, AC_MSG_ERROR(Cannot find headers of SDL.h.))

dnl  cmdline options 
AC_ARG_ENABLE(sdl_ttf,
 	      [  --disable-sdl-ttf       without freetype support  [default is enabled]], sdl_ttf=$enableval, sdl_ttf=yes)
AC_ARG_ENABLE(sdl_image,
 	      [  --disable-sdl-image     without sdl image support [default is enabled]], sdl_image=$enableval, sdl_image=yes)
AC_ARG_ENABLE(sdl_mixer,
 	      [  --disable-sdl-mixer     without sdl mixer support [default is enabled]], sdl_mixer=$enableval, sdl_mixer=yes)
AC_SUBST(PARTS)

dnl -*- Checking for lib SDL_ttf -*-
if test x"$sdl_ttf" = x"yes"
then
  AC_CHECK_HEADERS(SDL_ttf.h, have_sdl_ttf="true", have_sdl_ttf="false")
  if test "$have_sdl_ttf" = true;
  then
    AC_CHECK_LIB(SDL_ttf, TTF_OpenFontIndex, ttf2_ok=yes, ttf2_ok=no)
    if test "$ttf2_ok" = no;
    then
      AC_CHECK_LIB(SDL_ttf, TTF_OpenFont, ttf_ok=yes, ttf_ok=no)
      if test "$ttf_ok" = no;
      then
        AC_MSG_ERROR(Cannot find SDL_tff library.)
      else
        LIBS="$LIBS -lSDL_ttf"
        PARTS="ttf"
        AC_DEFINE(TTF_RELEASE, 1)
      fi
    else
      LIBS="$LIBS -lSDL_ttf"
      PARTS="ttf"
      AC_DEFINE(TTF_RELEASE, 2)	
    fi
  else
    sdl_ttf=no
  fi
fi

dnl -*- Checking for lib SDL_image -*-
if test x"$sdl_image" = x"yes"
then
  AC_CHECK_HEADERS(SDL_image.h, 
                   have_sdl_image="true",
		   have_sdl_image="false")
  if test "$have_sdl_image" = true;
  then
    AC_CHECK_LIB(SDL_image, IMG_Load_RW, image_ok=yes, image_ok=no)
    if test "$image_ok" = no; 
    then 
      AC_MSG_ERROR(Cannot find SDL_image library.)
    else
      LIBS="$LIBS -lSDL_image"
      PARTS="$PARTS loader"
    fi
  else
    sdl_image=no
  fi
fi

dnl -*- Checking for lib SDL_mixer -*-
if test x"$sdl_mixer" = x"yes"
then 
  AC_CHECK_HEADERS(SDL_mixer.h, 
	           have_sdl_mixer="true", 
		   have_sdl_mixer="false")
  if test "$have_sdl_mixer" = true;
  then
    AC_CHECK_LIB(SDL_mixer, Mix_OpenAudio, mixer_ok=yes, mixer_ok=no)
    if test "$mixer_ok" = no; 
    then 
      AC_MSG_ERROR(Cannot find SDL_mixer library.)
    else
      LIBS="$LIBS -lSDL_mixer"
      PARTS="$PARTS mixer"
    fi
  fi
fi

#  Finally create all the generated files 
AC_OUTPUT(makefile.toplevel)

dnl Output the configuration summary
echo
echo "Configure finished, type 'make' to build."

